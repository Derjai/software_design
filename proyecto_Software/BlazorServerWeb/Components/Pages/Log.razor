<!-- Pages/Log.razor -->
@page "/Historial"
@using BlazorServerWeb.Services
@using BlazorServerWeb.Models
@inject LogService LogService
@inject NavigationManager Navigation
<h3>Historial de transacciones</h3>

<form>
    <NavLink class="btn btn-link" href="@($"/LogFecha/{FechaFiltro}")">Fecha</NavLink>
    <input type="date" id="fecha" @onchange="@(e => FechaFiltro = DateTime.Parse(e.Value.ToString()))" />

    <NavLink class="btn btn-link" href="@($"/LogDocumento/{NumeroDocumentoFiltro}")">NumeroDocumento</NavLink>
    <input type="text" id="numeroDocumento" @onchange="@(e => NumeroDocumentoFiltro = e.Value.ToString())" value="@NumeroDocumentoFiltro" />

    <NavLink class="btn btn-link" href="@($"/LogTipo/{TipoTransaccionFiltro}")">TipoTransacción</NavLink>
    <select id="tipoTransaccion" @onchange="@(e => TipoTransaccionFiltro = e.Value.ToString())" value="@TipoTransaccionFiltro">
        <option value="">Todos</option>
        <option value="Crear">Crear</option>
        <option value="Leer">Leer</option>
        <option value="Actualizar">Actualizar</option>
        <option value="Borrar">Borrar</option>
    </select>
</form>
@if (Logs == null)
{
    <p>Error al conectar con la base de datos</p>
}
else if (Logs.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Fecha</th>
                <th>Número de Documento</th>
                <th>Tipo de Transacción</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var log in Logs)
            {
                <tr>
                    <td>@log.Fecha.ToString("yyyy-MM-dd HH:mm:ss")</td>
                    <td>@log.Num_Doc</td>
                    <td>@log.Tipo_Transaccion</td>
                </tr>
            }
        </tbody>
    </table>
}
else if (Logs.Count() == 0)
{
    <p>No hay registros del historial disponibles.</p>
}

@code {
    string NumeroDocumentoFiltro { get; set; } = string.Empty;
    DateTime FechaFiltro { get; set; } = DateTime.Now;
    string TipoTransaccionFiltro { get; set; } = "Crear";
    private IEnumerable<BlazorServerWeb.Models.Log> Logs;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Logs = await LogService.GetLogsAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al obtener registros: {ex.Message}");
        }
    }
}
